(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{381:function(a,t,s){"use strict";s.r(t);var r=s(45),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"문법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문법"}},[a._v("#")]),a._v(" 문법")]),a._v(" "),s("p",[a._v("Toast의 기본적인 문법입니다.")]),a._v(" "),s("h2",{attrs:{id:"커맨드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#커맨드"}},[a._v("#")]),a._v(" 커맨드")]),a._v(" "),s("p",[a._v("Toast의 모든 키워드, 연산자, 구문, 메서드는 커맨드입니다.")]),a._v(" "),s("p",[a._v("커맨드의 이름을 적고 그 뒤에 파라미터를 적어 커맨드를 사용할 수 있습니다.\n(괄호나 쉼표를 적지 않습니다.)")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" cmd1 cmd1Param1 cmd1Param2\n")])])]),s("p",[a._v("커맨드를 파라미터로 사용할 수 있습니다.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" cmd1 cmd2 cmd2Param1 cmd1Param1\n")])])]),s("h2",{attrs:{id:"그룹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#그룹"}},[a._v("#")]),a._v(" 그룹")]),a._v(" "),s("p",[a._v("가독성을 높이기 위해 파라미터를 그룹으로 묶을 수 있습니다.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cmd1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cmd2 cmd2Param2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" cmd1Param1\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cmd1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cmd2 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cmd2Param2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cmd1Param1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h2",{attrs:{id:"파라미터"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#파라미터"}},[a._v("#")]),a._v(" 파라미터")]),a._v(" "),s("p",[a._v("일반적인 커맨드와 다르게 사칙연산, 논리 연산 등의 연산자들은 커맨드를 앞에 배치하면 가독성이 떨어질 수 있습니다.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// a + b + c + d")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" add add add a b c d\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/guide/context.html"}},[s("code",[a._v("ToastContext")]),a._v("의 위치 변경")]),a._v("을 통해 파라미터의 위치를 바꿔 가독성을 높일 수 있습니다.")],1),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" a add b add c add d\n")])])]),s("h2",{attrs:{id:"형변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#형변환"}},[a._v("#")]),a._v(" 형변환")]),a._v(" "),s("p",[a._v("Toast의 커맨드는 모두 파라미터와 리턴값의 타입이 미리 정해져있는 정적 타입 언어입니다.\nToast에서는 메서드 오버로딩을 사용할 수 없기 때문에, 명시적 형변환을 할 필요가 없습니다.")]),a._v(" "),s("p",[a._v("만약 "),s("code",[a._v("text")]),a._v("타입을 "),s("code",[a._v("number")]),a._v("타입으로 변환하는 컨버터를 추가했다면, 아래 커맨드 라인을 실행할 수 있습니다.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1"')]),a._v(" add "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n")])])]),s("p",[a._v("이 형변환 시스템을 통해 코드를 간결하고 쉽게 작성할 수 있습니다.")]),a._v(" "),s("h2",{attrs:{id:"함수"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#함수"}},[a._v("#")]),a._v(" 함수")]),a._v(" "),s("p",[a._v("함수 타입의 값은 다음과 같이 작성할 수 있습니다.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    print x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    print y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("세미콜론("),s("code",[a._v(";")]),a._v(")을 사용해 통해 함수의 커맨드 라인을 나눌 수 있습니다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);